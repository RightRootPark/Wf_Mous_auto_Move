<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        uTZe3MS9RgAAAABJRU5ErkJggg==
</value>
  </data>
</root>